filter(cran,size>100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3=select(cran,ip_id,package,size)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_gb=size_mb/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(avg_bytes=mean(size))
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?gorup_by
?group_by
by_package<-group_by(cran,package)
by_package
summarize(cran,mean(size))
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_count)
View(top_counts)
top_counts_sorted<-arrange(top_counts,count)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts)
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
sswirl()
swirl()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,value,-grade)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(data=res,col=sex_class,into=c("sex","class"))
submit()
students3
submit()
submit()
?spread
submit()
submit()
extract_numeric("class5")
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
bind_rows(passed,failed)
sat
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridat)
library(lubridate)
help(package=lubridate)
today()
this_day<-today()
this_day
month(this_day)
wday(3)
wday(this_day)
wday(this_day,label=T)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
second(this_moment)
ymd("1989-05-17")
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("//192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment,hours=8,minutes=34,seconds=55)
this_moment
this_moment<-undate(this_moment)
this_moment<-update(this_moment)
this_moment<-update(this_moment, hours=10,minutes=16,seconds=0)
this_moment
nyc<-now(tzone="America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<-update(depart,hours=17,minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,tzone="Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
getwd()
head(x, 10)
x <- [2, 3]
x <- rnorm(100)
mean(x)
ls()
install.packages("kernlab")
install.packages("knitr")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
print(p)
par(mfrow = c(1, 5))
print(p)
splom(p)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies)
setwd("~/GitHub/RepData_PeerAssessment1")
ds <- read.csv("activity.csv", header = T, na.strings = "NA", stringsAsFactors = F)
grouped_steps <- tapply(ds$steps, ds$date, sum)
median(grouped_steps)
ds <- read.csv("activity.csv", header = T)
grouped_steps <- tapply(ds$steps, ds$date, sum)
median(grouped_steps)
ds <- read.csv("activity.csv", header = T, na.strings = "NA", stringsAsFactors = F)
mean(grouped_steps, na.rm = FALSE)
mean(grouped_steps, na.rm = T)
Sys.setlocale("LC_TIME", "C")
ds <- read.csv("activity.csv", header = T, na.strings = "NA", stringsAsFactors = F)
grouped_steps <- tapply(ds$steps, ds$date, sum)
mean_steps <- round(mean(grouped_steps), na.rm = T)
median_steps <- median(grouped_steps, na.rm = T)
grouped_steps <- tapply(ds$steps, ds$date, sum)
mean_steps <- round(mean(grouped_steps), na.rm = T)
plot(ds$interval, grouped_steps, type = "l")
plot(ds$interval, ds$steps, type = "l")
plot(ds$interval ~ ds$steps, type = "l")
grouped_steps2 <- tapply(ds$steps, ds$interval, mean)
plot(grouped_steps2, c(1:288))
plot(c(1:288), grouped_steps2)
c(1:4)
head(grouped_steps2)
tail(grouped_steps2)
str(grouped_steps2)
grouped_steps2 <- tapply(ds$steps, ds$interval, mean, na.rm = T)
plot(c(1:length(grouped_steps2)), grouped_steps2)
plot(c(1:length(grouped_steps2)), grouped_steps2, type = "l")
plot(c(1:length(grouped_steps2)), grouped_steps2, type = "l", main = "Average daily activity pattern", ylab = "The average number of steps", xlab = "The number of 5-minute interval in a day")
max(grouped_steps2)
number(grouped_steps2)
num(grouped_steps2)
grouped_steps2[max(grouped_steps2)]
str(grouped_steps2)
names(grouped_steps2)
grouped_steps2[1]
max(grouped_steps2)
grouped_steps2[[max(grouped_steps2)]]
grouped_steps2[grouped_steps2 == max(grouped_steps2)]
grouped_steps2[grouped_steps2 == max(grouped_steps2)]/5
grouped_steps2[grouped_steps2 == max(grouped_steps2)][1]
names(grouped_steps2[grouped_steps2 == max(grouped_steps2)])
names(grouped_steps2[grouped_steps2 == max(grouped_steps2)])/5
as.numeric(names(grouped_steps2[grouped_steps2 == max(grouped_steps2)]))/5
names(grouped_steps2[grouped_steps2 == max()])
names(grouped_steps2[grouped_steps2 == max(grouped_steps2)])
max(grouped_steps2)
head(max(grouped_steps2))
head(grouped_steps2)
names(grouped_steps2[[grouped_steps2 == max(grouped_steps2)]])
names(grouped_steps2[[max(grouped_steps2)]])
grouped_steps2[[max(grouped_steps2)]]
max(grouped_steps2)
max(grouped_steps2)[]
max(grouped_steps2)[1]
[max(grouped_steps2)]
grouped_steps2 == max(grouped_steps2)
grouped_steps2[grouped_steps2 == max(grouped_steps2)]
names(grouped_steps2[grouped_steps2 == max(grouped_steps2)])
plot(c(0:length(grouped_steps2), step = 5), grouped_steps2, type = "l", main = "Average daily activity pattern", ylab = "The average number of steps", xlab = "The number of 5-minute interval in a day")
plot(c(0:length(grouped_steps2)*5, step = 5), grouped_steps2, type = "l", main = "Average daily activity pattern", ylab = "The average number of steps", xlab = "The number of 5-minute interval in a day")
c(1:10, step = 3)
c(1:10, 3)
plot(c(0:length(grouped_steps2)), grouped_steps2, type = "l", main = "Average daily activity pattern", ylab = "The average number of steps", xlab = "The number of 5-minute interval in a day")
plot(c(0:length(grouped_steps2)-1), grouped_steps2, type = "l", main = "Average daily activity pattern", ylab = "The average number of steps", xlab = "The number of 5-minute interval in a day")
plot(c(1:length(grouped_steps2)), grouped_steps2, type = "l", main = "Average daily activity pattern", ylab = "The average number of steps", xlab = "The number of 5-minute interval in a day")
grouped_steps2 <- tapply(ds$steps, ds$interval, mean)
plot(c(1:length(grouped_steps2)), grouped_steps2, type = "l", main = "Average daily activity pattern", ylab = "The average number of steps", xlab = "The number of 5-minute interval in a day")
grouped_steps2 <- tapply(ds$steps, ds$interval, mean, na.rm = T)
plot(c(1:length(grouped_steps2)), grouped_steps2, type = "l", main = "Average daily activity pattern", ylab = "The average number of steps", xlab = "The number of 5-minute interval in a day")
plot(names(grouped_steps2)), grouped_steps2, type = "l", main = "Average daily activity pattern", ylab = "The average number of steps", xlab = "The number of 5-minute interval in a day")
plot(names(grouped_steps2), grouped_steps2, type = "l", main = "Average daily activity pattern", ylab = "The average number of steps", xlab = "The number of 5-minute interval in a day")
sum(grouped_steps2[is.na()])
sum(grouped_steps2[is.na])
grouped_steps2[is.na()]
sum(grouped_steps2[is.na(grouped_steps2)])
is.na(grouped_steps2)
sum(grouped_steps2[is.na(ds)])
View(ds)
sum(grouped_steps2[is.na(ds$steps)])
sum(ds[is.na(ds)])
sum(ds$steps[is.na(ds$steps)])
is.na(ds$steps)
sum(!is.na(ds$steps))
sum(is.na(ds$steps))
sum(is.na(ds))
ds[is.na(ds)] = 0
is.na(ds)
sum(is.na(ds))
temp_ds <- ds
temp_ds[is.na(temp_ds)] = 0
View(temp_ds)
str(temp_ds)
temp_ds$date <- strptime(temp_ds$date, "%Y-%m-%d")
temp_ds$date <- as.POSIXct(temp_ds$date)
str(temp_ds)
weekdays(head(temp_ds$date))
x <- weekdays(head(temp_ds$date))
x[weekdays(x) in c("Monday")] = 2
x[weekdays(x) == c("Monday")] = 2
x[weekdays(x) == "Monday"] = 2
str(x)
x[weekdays(x) %in% c("Monday")] = 2
x[weekdays(x) %in% c('Monday')] = 'Weekday'
x[x %in% c('Monday')] = 'Weekday'
x <- weekdays(temp_ds$date)
x[x %in% c('Saturday', 'Sunday')] = 'Weekend'
x[!x %in% c('Saturday', 'Sunday')] = 'Weekday'
sum(x[x == 'Weekday'])
summary(x)
str(x)
s(x)
x[x == 2]
x[x == 'Weekday']
x[x == 'Weekend']
x <- weekdays(temp_ds$date)
hist(x)
sum(x[x %in% 'Weekend'])
x[x %in% 'Weekend']
x[x %in% 'Weekday']
x[!(x %in% c('Saturday', 'Sunday'))] = 'Weekday'
x[x %in% c('Saturday', 'Sunday')] = 'Weekend'
table(x)
temp_ds <- cbind(x)
temp_ds <- ds
temp_ds <- cbind(temp_ds, x)
View(temp_ds)
ggplot(temp_ds, aes(mean(temp_ds$steps), temp_ds$interval))+geom_line(state="identity")+facet_grid(.~weekdayFactor)
library(ggplot2)
ggplot(temp_ds, aes(mean(temp_ds$steps), temp_ds$interval))+geom_line(state="identity")+facet_grid(.~weekdayFactor)
ggplot(temp_ds, aes(mean(temp_ds$steps), temp_ds$interval))
ggplot(temp_ds, aes(temp_ds$steps, temp_ds$interval))
ggplot(temp_ds, aes(mean(temp_ds$steps), temp_ds$interval))+geom_line()
ggplot(temp_ds, aes(temp_ds$steps, temp_ds$interval))+geom_line(state="identity")+facet_grid(.~weekdayFactor)
first_ds <- temp_ds[temp_ds$weekdayFactor == 'Weekday']
first_ds <- temp_ds[,temp_ds$weekdayFactor == 'Weekday']
first_ds <- temp_ds[temp_ds$weekdayFactor == 'Weekday',]
View(first_ds)
View(temp_ds)
first_ds <- temp_ds[temp_ds$x == 'Weekday',]
second_ds <- temp_ds[temp_ds$x == 'Weekend',]
grouped_steps41 <- tapply(first_ds$steps, first_ds$interval, mean)
grouped_steps42 <- tapply(second_ds$steps, second_ds$interval, mean)
temp1 <- cbind(names(grouped_steps41), grouped_steps41)
temp2 <- cbind(names(grouped_steps42), grouped_steps42)
temp1 <- cbind(names(grouped_steps41), grouped_steps41, 'Weekday')
head(temp1)
temp2 <- cbind(names(grouped_steps42), grouped_steps42, 'Weekend')
final_ds <- rbind(temp1, temp2)
ggplot(final_ds, aes(final_ds[,2], final_ds[,1])+geom_line(state="identity")+facet_grid(.~final_ds[,3])
ggplot(final_ds, aes(final_ds[,2], final_ds[,1]))+geom_line(state="identity")+facet_grid(.~final_ds[,3])
final_ds <- as.data.frame(final_ds)
View(final_ds)
ggplot(final_ds, aes(final_ds[,2], final_ds[,1]))+geom_line(state="identity")+facet_grid(.~final_ds[,3])
ggplot(final_ds, aes(final_ds[,2], final_ds[,1]))
ggplot(final_ds, aes(final_ds[,2], final_ds[,1]))+geom_line(state="identity")
View(final_ds)
str(final_ds)
final_ds[,1] <- as.numeric(final_ds[,1])
View(final_ds)
final_ds[,2] <- as.numeric(final_ds[,2])
View(final_ds)
final_ds[,3] <- as.Data(final_ds[,3])
final_ds[,3] <- as.POSIXct(final_ds[,3])
final_ds[,3] <- as.POSIXct(final_ds[,3], "%Y-%m-%d")
View(final_ds)
ggplot(final_ds, aes(final_ds[,2], final_ds[,1]))+geom_line(state="identity")
ggplot(final_ds, aes(final_ds[,2], final_ds[,1]))+geom_line(state="identity")+facet_grid(.~final_ds[,3])
ggplot(final_ds, aes(final_ds[,2], final_ds[,1]))+geom_line(state="identity")+facet_wrap(.~final_ds[,3], nrow = 2, ncol = 1)
final_ds[,3] <- as.character(final_ds[,3])
ggplot(final_ds, aes(final_ds[,2], final_ds[,1]))+geom_line(state="identity")+facet_wrap(.~final_ds[,3], nrow = 2, ncol = 1)
ggplot(final_ds, aes(final_ds[,2], final_ds[,1]))+geom_line(state="identity")
View(final_ds)
Sys.setlocale("LC_TIME", "C")
ds <- read.csv("activity.csv", header = T, na.strings = "NA", stringsAsFactors = F)
temp_ds <- ds
temp_ds[is.na(temp_ds)] = 0
library(ggplot2)
temp_ds$date <- strptime(temp_ds$date, "%Y-%m-%d")
temp_ds$date <- as.POSIXct(temp_ds$date)
weekdayFactor <- weekdays(temp_ds$date)
weekdayFactor[!(weekdayFactor %in% c('Saturday', 'Sunday'))] = 'Weekday'
weekdayFactor[weekdayFactor %in% c('Saturday', 'Sunday')] = 'Weekend'
temp_ds <- cbind(temp_ds, weekdayFactor)
#Constructing the final data set for plotting
first_ds <- temp_ds[temp_ds$weekdayFactor == 'Weekday',]
second_ds <- temp_ds[temp_ds$weekdayFactor == 'Weekend',]
grouped_steps41 <- tapply(first_ds$steps, first_ds$interval, mean)
grouped_steps42 <- tapply(second_ds$steps, second_ds$interval, mean)
temp1 <- cbind(names(grouped_steps41), grouped_steps41, 'Weekday')
temp2 <- cbind(names(grouped_steps42), grouped_steps42, 'Weekend')
final_ds <- rbind(temp1, temp2)
final_ds <- as.data.frame(final_ds)
final_ds[,1] <- as.numeric(final_ds[,1])
final_ds[,2] <- as.numeric(final_ds[,2])
final_ds[,3] <- as.character(final_ds[,3])
View(first_ds)
View(final_ds)
temp_ds <- ds
temp_ds[is.na(temp_ds)] = 0
temp_ds$date <- strptime(temp_ds$date, "%Y-%m-%d")
temp_ds$date <- as.POSIXct(temp_ds$date)
weekdayFactor <- weekdays(temp_ds$date)
weekdayFactor[!(weekdayFactor %in% c('Saturday', 'Sunday'))] = 'Weekday'
weekdayFactor[weekdayFactor %in% c('Saturday', 'Sunday')] = 'Weekend'
temp_ds <- cbind(temp_ds, weekdayFactor)
View(temp_ds)
first_ds <- temp_ds[temp_ds$weekdayFactor == 'Weekday',]
second_ds <- temp_ds[temp_ds$weekdayFactor == 'Weekend',]
View(first_ds)
grouped_steps41 <- tapply(first_ds$steps, first_ds$interval, mean)
grouped_steps42 <- tapply(second_ds$steps, second_ds$interval, mean)
head(grouped_steps41)
names(head(grouped_steps41))
temp1 <- as.data.frame(names(grouped_steps41), grouped_steps41, 'Weekday')
temp1 <- cbind(names(grouped_steps41), grouped_steps41, 'Weekday')
head(temp1)
temp2 <- cbind(names(grouped_steps42), grouped_steps42, 'Weekend')
final_ds <- rbind(temp1, temp2)
final_ds <- as.data.frame(final_ds)
View(final_ds)
head(final_ds[,1])
head(final_ds[,0])
head(final_ds[,4])
final_ds[,1] <- as.numeric(final_ds[,1])
View(final_ds)
temp_ds$date <- strptime(temp_ds$date, "%Y-%m-%d")
temp_ds$date <- as.POSIXct(temp_ds$date)
weekdayFactor <- weekdays(temp_ds$date)
weekdayFactor[!(weekdayFactor %in% c('Saturday', 'Sunday'))] = 'Weekday'
weekdayFactor[weekdayFactor %in% c('Saturday', 'Sunday')] = 'Weekend'
temp_ds <- cbind(temp_ds, weekdayFactor)
#Constructing the final data set for plotting
first_ds <- temp_ds[temp_ds$weekdayFactor == 'Weekday',]
second_ds <- temp_ds[temp_ds$weekdayFactor == 'Weekend',]
grouped_steps41 <- tapply(first_ds$steps, first_ds$interval, mean)
grouped_steps42 <- tapply(second_ds$steps, second_ds$interval, mean)
temp1 <- cbind(names(grouped_steps41), grouped_steps41, 'Weekday')
temp2 <- cbind(names(grouped_steps42), grouped_steps42, 'Weekend')
final_ds <- rbind(temp1, temp2)
final_ds <- as.data.frame(final_ds)
View(final_ds)
final_ds <- rbind(temp1, temp2)
final_ds <- as.data.frame(final_ds, row.names = c(Interval, Mean, WeekdayFactor))
final_ds <- as.data.frame(final_ds, row.names = c('Interval', 'Mean', 'WeekdayFactor'))
View(final_ds)
final_ds <- rbind(temp1, temp2)
final_ds <- as.data.frame(final_ds, col.names = c('Interval', 'Mean', 'WeekdayFactor'))
View(final_ds)
names(final_ds)
names(final_ds) = c('Interval', 'Mean', 'WeekdayFactor')
names(final_ds)
View(ds)
View(final_ds)
temp_ds$date <- strptime(temp_ds$date, "%Y-%m-%d")
temp_ds$date <- as.POSIXct(temp_ds$date)
weekdayFactor <- weekdays(temp_ds$date)
weekdayFactor[!(weekdayFactor %in% c('Saturday', 'Sunday'))] = 'Weekday'
weekdayFactor[weekdayFactor %in% c('Saturday', 'Sunday')] = 'Weekend'
temp_ds <- cbind(temp_ds, weekdayFactor)
#Constructing the final data set for plotting
first_ds <- temp_ds[temp_ds$weekdayFactor == 'Weekday',]
second_ds <- temp_ds[temp_ds$weekdayFactor == 'Weekend',]
grouped_steps41 <- tapply(first_ds$steps, first_ds$interval, mean)
grouped_steps42 <- tapply(second_ds$steps, second_ds$interval, mean)
temp1 <- cbind(names(grouped_steps41), grouped_steps41, 'Weekday')
temp2 <- cbind(names(grouped_steps42), grouped_steps42, 'Weekend')
final_ds <- rbind(temp1, temp2)
final_ds <- as.data.frame(final_ds)
names(final_ds) = c('Interval', 'Mean', 'WeekdayFactor')
View(final_ds)
summary(final_ds)
str(final_ds)
final_ds$Mean <- as.numeric(final_ds$Mean)
View(final_ds)
> final_ds <- rbind(temp1, temp2)
> final_ds <- as.data.frame(final_ds)
> names(final_ds) = c('Interval', 'Mean', 'WeekdayFactor')
final_ds <- rbind(temp1, temp2)
final_ds <- as.data.frame(final_ds)
names(final_ds) = c('Interval', 'Mean', 'WeekdayFactor')
View(final_ds)
final_ds$Mean <- as.double(final_ds$Mean)
View(final_ds)
> final_ds <- rbind(temp1, temp2)
> final_ds <- as.data.frame(final_ds)
> names(final_ds) = c('Interval', 'Mean', 'WeekdayFactor')
final_ds <- rbind(temp1, temp2)
final_ds <- as.data.frame(final_ds)
> final_ds <- rbind(temp1, temp2)
> final_ds <- as.data.frame(final_ds)
> names(final_ds) = c('Interval', 'Mean', 'WeekdayFactor')
names(final_ds) = c('Interval', 'Mean', 'WeekdayFactor')
View(final_ds)
View(final_ds)
final_ds <- rbind(temp1, temp2)
final_ds <- as.data.frame(final_ds, stringsAsFactors = F)
names(final_ds) = c('Interval', 'Mean', 'WeekdayFactor')
View(final_ds)
str(final_ds)
final_ds[,1] <- as.numeric(final_ds[,1])
final_ds[,2] <- as.numeric(final_ds[,2])
View(final_ds)
ggplot(final_ds, aes(final_ds[,2], final_ds[,1]))+geom_line(state="identity")+facet_grid(.~final_ds[,3])
ggplot(final_ds, aes(final_ds[,2], final_ds[,1]))+geom_line(state="identity")
ggplot(final_ds, aes(final_ds[,1], final_ds[,2]))+geom_line()
ggplot(final_ds, aes(final_ds[,1], final_ds[,2]))+geom_line()+facet_grid(.~final_ds[,3])
ggplot(final_ds, aes(final_ds[,1], final_ds[,2]))+geom_line()+facet_wrap(final_ds[,1] ~ final_ds[,3], nrow = 2, ncol = 1)
ggplot(final_ds, aes(final_ds[,1], final_ds[,2]))+geom_line()+facet_wrap(final_ds[,2] ~ final_ds[,3], nrow = 2, ncol = 1)
library(lattice)
xyplot(final_ds[,2] ~ final_ds[,1]|final_ds[,3], panel = function(final_ds[,1], final_ds[,2]))
xyplot(final_ds[,2] ~ final_ds[,1]|final_ds[,3], panel = function(final_ds[,1], final_ds[,2])){ panel.xyplot(final_ds[,1], final_ds[,2], ...)}
xyplot(final_ds[,2] ~ final_ds[,1] | final_ds[,3], panel = function(final_ds[,1], final_ds[,2])){ panel.xyplot(final_ds[,1], final_ds[,2], ...)}
final_ds[,3] <- factor(final_ds[,3], labels = c("Weekday", "Weekend"))
ggplot(final_ds, aes(final_ds[,1], final_ds[,2]))+geom_line()+facet_grid(.~final_ds[,3])
View(final_ds)
xyplot(final_ds[,1] ~ final_ds[,2])
xyplot(final_ds[,2] ~ final_ds[,1])
xyplot(final_ds[,2] ~ final_ds[,1] | final_ds[,3])
layout = c(1, 2)
xyplot(final_ds[,2] ~ final_ds[,1] | final_ds[,3])
xyplot(final_ds[,2] ~ final_ds[,1] | final_ds[,3]){layout = c(1, 2)}
xyplot(final_ds[,2] ~ final_ds[,1] | final_ds[,3], layout = c(1, 2))
View(final_ds)
xyplot(final_ds[,2][1] ~ final_ds[,1] | final_ds[,3], layout = c(1, 2))
xyplot(final_ds[,2] ~ final_ds[,1] | final_ds[,3], layout = c(1, 2))
xyplot(final_ds[,2] ~ final_ds[,1] | final_ds[,3], layout = c(1, 2), type = "l")
head(final_ds[,2])
str(final_ds[,2])
summary(final_ds[,2])
xyplot(final_ds[,2] ~ final_ds[,1] | final_ds[,3], layout = c(1, 2), type = "l", xlab = "Interval", ylab = "Number of steps (average)")
